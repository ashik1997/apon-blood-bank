/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bloodbank;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Aashiq
 */
public class NewUser extends javax.swing.JInternalFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    public NewUser() {
        initComponents();
        conn= DatabaseConnection.db_connect();
        Update_User_table();
        AutoUserNo();
    }
        ////------show table-----
        public void Update_User_table(){
        try{
        String sl="select User_No, User_Name, Phone from User";
        pst=conn.prepareStatement(sl);
        rs=pst.executeQuery();
        tbl_user.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
            rs.close();
            pst.close();
            }catch(Exception e){}
        }
    }
/// -------auto update user no----
    public void AutoUserNo(){
        try{
            String sl="select max(User_No) from User";
            pst=conn.prepareStatement(sl);
            rs=pst.executeQuery();
            String s=rs.getString("max(User_No)");
            if(s==null){
            txt_user_no.setText("1"); 
            }else{
            int a = Integer.parseInt(s);
            int b=a+1;
            txt_user_no.setText(String.valueOf(b));
            }  
        }catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
        try{
            rs.close();
            pst.close();
        }catch(Exception e){}
        }
    }
    
    public void TextFieldClear(){
        txt_user_name.setText("");
        txt_password.setText("");
        txt_conform_password.setText("");        
        txt_phone.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_user = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btn_update = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_conform_password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        txt_phone = new javax.swing.JTextField();
        txt_user_name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_user_no = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(102, 102, 102));
        setClosable(true);
        setTitle("New User");

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        tbl_user.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_user.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_userMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_user);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane4.setViewportView(jPanel2);

        btn_update.setBackground(new java.awt.Color(0, 255, 0));
        btn_update.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Password");

        btn_delete.setBackground(new java.awt.Color(204, 0, 0));
        btn_delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Delete");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Conform Password");

        txt_conform_password.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_conform_password.setPreferredSize(new java.awt.Dimension(69, 23));
        txt_conform_password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_conform_passwordKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("User No");

        btn_save.setBackground(new java.awt.Color(0, 0, 204));
        btn_save.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_save.setForeground(new java.awt.Color(255, 255, 255));
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        txt_phone.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_phoneActionPerformed(evt);
            }
        });
        txt_phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_phoneKeyTyped(evt);
            }
        });

        txt_user_name.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_user_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_user_nameActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Phone No");

        txt_user_no.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txt_password.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_password.setPreferredSize(new java.awt.Dimension(69, 23));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("User Name");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Password");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(5, 5, 5)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(4, 4, 4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_conform_password, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(txt_password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_user_name, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_user_no, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(4, 4, 4)
                        .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_user_no, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_user_name, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_conform_password, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_update)
                    .addComponent(btn_delete))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_user_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_user_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_user_nameActionPerformed

    private void txt_phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_phoneActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        if((txt_conform_password.getText()).equals(txt_password.getText())){        
            
            if("".equals(txt_user_no.getText())){
                txt_user_no.requestFocus();
            }else if("".equals(txt_user_name.getText())){
                txt_user_name.requestFocus();
            }else if("".equals(txt_password.getText())){
                txt_password.requestFocus();
            }else if("".equals(txt_conform_password.getText())){
                txt_conform_password.requestFocus();
            }else{
                int p=JOptionPane.showConfirmDialog(null,"Do You Want To Update","Update",JOptionPane.YES_NO_OPTION);
                if(p==0){
                try{
                    String sql = "update User set User_Name='"+txt_user_name.getText()+"',"
                    + "Conform_Password='"+txt_conform_password.getText()+"',"
                    + "Phone='"+txt_phone.getText()+"'"
                    + "where User_No='"+txt_user_no.getText()+"'";
                    pst = conn.prepareStatement(sql);            
                    pst.execute();
                    Update_User_table();
                    TextFieldClear();
                    //        JOptionPane.showMessageDialog(null,"Upadate");
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null,e);
                }
                finally {
                try {
                    rs.close();
                    pst.close();
                }catch (SQLException e) {}
                }
                }
            }  
        
        }else{
        JOptionPane.showMessageDialog(null, "Password & Conform Password Not Match");
        }
        
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        try{
            String sql1 = "select * from User where User_No=?";
            pst=conn.prepareStatement(sql1);
            pst.setString(1, txt_user_no.getText());
            rs=pst.executeQuery();
            if(rs.next()){
                JOptionPane.showMessageDialog(null, "Already Exist");
            }else{

                if((txt_conform_password.getText()).equals(txt_password.getText())){
                    if("".equals(txt_user_no.getText())){
                    txt_user_no.requestFocus();
                }else if("".equals(txt_user_name.getText())){
                    txt_user_name.requestFocus();
                }else if("".equals(txt_password.getText())){
                    txt_password.requestFocus();
                }else if("".equals(txt_conform_password.getText())){
                    txt_conform_password.requestFocus();                
                }else{
                    int p=JOptionPane.showConfirmDialog(null,"Do You Want To Save","Saved",JOptionPane.YES_NO_OPTION);
                    if(p==0){
                    try {    
                            String sql = "insert into User (User_No,User_Name,Conform_Password,Phone) values (?,?,?,?)";
                            pst = conn.prepareStatement(sql);

                            pst.setString(1, txt_user_no.getText());
                            pst.setString(2, txt_user_name.getText());
                            pst.setString(3, txt_conform_password.getText());  
                                                    
                            pst.setString(4, txt_phone.getText());
                            pst.execute();
                            Update_User_table();
                            TextFieldClear();
                            AutoUserNo();
                            
                            
                            //            JOptionPane.showMessageDialog(null, "Data Saved");
                     }catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                        finally{
                            try{
                                rs.close();
                                pst.close();
                            }catch(SQLException e){}
                        }   
                    }
                }
                }else{
                JOptionPane.showMessageDialog(null, "Password & Conform Password Not Match");
                }
            }
       
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }finally{
        try{
            rs.close();
            pst.close();
        }catch(Exception e){}       
        }
        
    }//GEN-LAST:event_btn_saveActionPerformed

    private void txt_conform_passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_conform_passwordKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_conform_passwordKeyPressed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
       if("".equals(txt_user_name.getText())||"".equals(txt_user_no.getText())){
        JOptionPane.showMessageDialog(null, "Please Enter UserNo And UserName");
        }else{
        int p = JOptionPane.showConfirmDialog(null, "Do You Want To Delete", "Delete", JOptionPane.YES_NO_OPTION);
        if (p == 0) {
        try {
            String sql = "delete from User where User_No=? and User_Name=?";
            pst = conn.prepareStatement(sql);
            pst.setString(1, txt_user_no.getText());
            pst.setString(2, txt_user_name.getText());
            pst.execute();
            TextFieldClear();
            AutoUserNo();
            Update_User_table();
//                JOptionPane.showMessageDialog(null, "Data Deleted");

        } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
        } finally {
        try {
            rs.close();
            pst.close();
        } catch (Exception e) {}
        }
        }           
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void tbl_userMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_userMouseClicked
         try{
            int row=tbl_user.getSelectedRow();
            String tableClick=(tbl_user.getModel().getValueAt(row, 0).toString());
            String sql="select * from User where User_No='"+tableClick+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
            txt_user_no.setText(rs.getString("User_No"));
            txt_user_name.setText(rs.getString("User_Name"));                
            txt_phone.setText(rs.getString("Phone"));
                           
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);

        }finally{
        try{
        rs.close();
        pst.close();
        }catch(Exception e){}
        }
    }//GEN-LAST:event_tbl_userMouseClicked

    private void txt_phoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_phoneKeyTyped
        ///--only accepted integer number---
        char c=evt.getKeyChar();
        if(!(Character.isDigit(c)|| (c==KeyEvent.VK_BACK_SLASH)|| c==KeyEvent.VK_DELETE)){
        evt.consume();
        }
    }//GEN-LAST:event_txt_phoneKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tbl_user;
    private javax.swing.JPasswordField txt_conform_password;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_phone;
    private javax.swing.JTextField txt_user_name;
    private javax.swing.JTextField txt_user_no;
    // End of variables declaration//GEN-END:variables
}
